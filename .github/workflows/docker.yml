name: Docker Build and Publish

on:
  push:
    branches: [ dev ]
    tags: [ 'v*' ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/eliza-fruit-website

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies and build
      run: |
        npm ci || npm install
        npm run build:prod -- --base-href="/"
        
    - name: Prepare Docker context
      run: |
        cd dist/eliza_fruit_website
        if [ -d "browser" ]; then
          mv browser/* .
          rmdir browser
        fi
        cp ../../webiste-dockerfile ./Dockerfile
        cp ../../webiste-nginx.conf ./nginx.conf
        ls -la
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./dist/eliza_fruit_website
        file: ./dist/eliza_fruit_website/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64
        
    - name: Generate deployment summary
      run: |
        echo "## ðŸš€ Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "| Item | Value |" >> $GITHUB_STEP_SUMMARY
        echo "|------|-------|" >> $GITHUB_STEP_SUMMARY
        echo "| **Docker Image** | \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest\` |" >> $GITHUB_STEP_SUMMARY
        echo "| **Website** | https://mateuszczerniakowski.github.io/webiste/ |" >> $GITHUB_STEP_SUMMARY
        echo "| **Bundle Size** | 85.88kB (gzipped) |" >> $GITHUB_STEP_SUMMARY
        echo "| **Build Time** | $(date) |" >> $GITHUB_STEP_SUMMARY